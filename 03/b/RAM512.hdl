// This file is part of the materials accompanying the book
// "The Elements of Computing Systems" by Nisan and Schocken,
// MIT Press. Book site: www.idc.ac.il/tecs
// File name: projects/03/b/RAM512.hdl

/**
 * Memory of 512 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then
 * the in value is loaded into the memory location specified by address
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM512 {
    IN in[16], load, address[9];
    OUT out[16];

    PARTS:
      // through input to RAM64 selected by address
      DMux8Way(in=load, sel=address[6..8], a=la, b=lb, c=lc, d=ld, e=le, f=lf, g=lg, h=lh);

      // RAM8 units
      RAM64(in=in, load=la, address=address[0..5], out=out0);
      RAM64(in=in, load=lb, address=address[0..5], out=out1);
      RAM64(in=in, load=lc, address=address[0..5], out=out2);
      RAM64(in=in, load=ld, address=address[0..5], out=out3);
      RAM64(in=in, load=le, address=address[0..5], out=out4);
      RAM64(in=in, load=lf, address=address[0..5], out=out5);
      RAM64(in=in, load=lg, address=address[0..5], out=out6);
      RAM64(in=in, load=lh, address=address[0..5], out=out7);

      // pick output from RAM64 by address
      Mux8Way16(a=out0, b=out1, c=out2, d=out3, e=out4, f=out5, g=out6, h=out7, sel=address[6..8], out=out);
}
